// Generated by purs bundle 0.14.7
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];
  var alt = function (dict) {
      return dict.alt;
  };
  exports["alt"] = alt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var semigroupoidFn = {
      compose: function (f) {
          return function (g) {
              return function (x) {
                  return f(g(x));
              };
          };
      }
  };
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = {
      identity: function (x) {
          return x;
      },
      Semigroupoid0: function () {
          return Control_Semigroupoid.semigroupoidFn;
      }
  };
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                  
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];          
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var bind = function (dict) {
      return dict.bind;
  };
  exports["bind"] = bind;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];
  var empty = function (dict) {
      return dict.empty;
  };
  exports["empty"] = empty;
})(PS);
(function(exports) {
  "use strict";

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var functorMaybe = {
      map: function (v) {
          return function (v1) {
              if (v1 instanceof Just) {
                  return new Just(v(v1.value0));
              };
              return Nothing.value;
          };
      }
  };
  var fromJust = function () {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [ v.constructor.name ]);
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Data_Maybe = $PS["Data.Maybe"];
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  exports["deleteBy"] = deleteBy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["hush"] = hush;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Filterable"] = $PS["Data.Filterable"] || {};
  var exports = $PS["Data.Filterable"];
  var filterMap = function (dict) {
      return dict.filterMap;
  };
  exports["filterMap"] = filterMap;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS);
(function(exports) {
  "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var semigroupArray = {
      append: $foreign.concatArray
  };
  var append = function (dict) {
      return dict.append;
  };
  exports["append"] = append;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];                
  var foldr = function (dict) {
      return dict.foldr;
  };
  var oneOf = function (dictFoldable) {
      return function (dictPlus) {
          return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
      };
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $316 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($317) {
                      return $316(f($317));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var foldableMaybe = {
      foldr: function (v) {
          return function (z) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return z;
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return v(v1.value0)(z);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
              };
          };
      },
      foldl: function (v) {
          return function (z) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return z;
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return v(z)(v1.value0);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
              };
          };
      },
      foldMap: function (dictMonoid) {
          return function (v) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Data_Monoid.mempty(dictMonoid);
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return v(v1.value0);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      }
  };
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = {
      foldr: $foreign.foldrArray,
      foldl: $foreign.foldlArray,
      foldMap: function (dictMonoid) {
          return foldMapDefaultR(foldableArray)(dictMonoid);
      }
  };
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["sequence_"] = sequence_;
  exports["oneOf"] = oneOf;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var not = function (dict) {
      return dict.not;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = {
      ff: false,
      tt: true,
      implies: function (a) {
          return function (b) {
              return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
          };
      },
      conj: $foreign.boolConj,
      disj: $foreign.boolDisj,
      not: $foreign.boolNot
  };
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */

  "use strict";          

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];                                   
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var showNumber = {
      show: $foreign.showNumberImpl
  };
  var show = function (dict) {
      return dict.show;
  };
  exports["show"] = show;
  exports["showNumber"] = showNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["reflectSymbol"] = reflectSymbol;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["FRP.Behavior"] = $PS["FRP.Behavior"] || {};
  var exports = $PS["FRP.Behavior"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                      
  var ABehavior = function (x) {
      return x;
  };
  var sample = function (v) {
      return function (e) {
          return v(e);
      };
  };
  var functorABehavior = function (dictFunctor) {
      return {
          map: function (f) {
              return function (v) {
                  return function (e) {
                      return v(Data_Functor.map(dictFunctor)(function (v1) {
                          return function ($66) {
                              return v1(f($66));
                          };
                      })(e));
                  };
              };
          }
      };
  };
  var sampleBy = function (dictIsEvent) {
      return function (f) {
          return function (b) {
              return function (e) {
                  return sample(Data_Functor.map(functorABehavior((dictIsEvent.Filterable1()).Functor1()))(f)(b))(Data_Functor.map((dictIsEvent.Filterable1()).Functor1())(Data_Function.applyFlipped)(e));
              };
          };
      };
  };
  var sample_ = function (dictIsEvent) {
      return sampleBy(dictIsEvent)(Data_Function["const"]);
  };
  var behavior = ABehavior;
  exports["behavior"] = behavior;
  exports["sample_"] = sample_;
  exports["functorABehavior"] = functorABehavior;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["FRP.Event.Class"] = $PS["FRP.Event.Class"] || {};
  var exports = $PS["FRP.Event.Class"];
  var keepLatest = function (dict) {
      return dict.keepLatest;
  };
  exports["keepLatest"] = keepLatest;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Deku.Control"] = $PS["Deku.Control"] || {};
  var exports = $PS["Deku.Control"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event_Class = $PS["FRP.Event.Class"];
  var deku = function (dictIsEvent) {
      return function (root) {
          return function (elts) {
              return function (v) {
                  return FRP_Event_Class.keepLatest(dictIsEvent)(Data_Functor.mapFlipped((dictIsEvent.Filterable1()).Functor1())(FRP_Behavior.sample_(dictIsEvent)(v.ids)(Control_Applicative.pure((dictIsEvent.Alternative0()).Applicative0())(Data_Unit.unit)))(function (me) {
                      return Data_Foldable.oneOf(Data_Foldable.foldableArray)((dictIsEvent.Alternative0()).Plus1())([ Control_Applicative.pure((dictIsEvent.Alternative0()).Applicative0())(v.makeRoot({
                          id: me,
                          root: root
                      })), (function (y) {
                          return y;
                      })(elts)(me)(v) ]);
                  }));
              };
          };
      };
  };
  exports["deku"] = deku;
})(PS);
(function(exports) {
  "use strict";

  exports.empty = {};
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Deku.Pursx"] = $PS["Deku.Pursx"] || {};
  var exports = $PS["Deku.Pursx"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event_Class = $PS["FRP.Event.Class"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Type_Proxy = $PS["Type.Proxy"];
  var pursxToElementNil = function (dictPlus) {
      return {
          pursxToElement: function (v) {
              return function (v1) {
                  return {
                      cache: Foreign_Object.empty,
                      element: function (v2) {
                          return function (v3) {
                              return Control_Plus.empty(dictPlus);
                          };
                      }
                  };
              };
          },
          Plus0: function () {
              return dictPlus;
          }
      };
  };
  var pursxToElement = function (dict) {
      return dict.pursxToElement;
  };                     
  var makePursx$prime = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function () {
              return function () {
                  return function (dictPursxToElement) {
                      return function (dictIsEvent) {
                          return function (verb) {
                              return function (html) {
                                  return function (r) {
                                      var go = function (parent) {
                                          return function (v) {
                                              return FRP_Event_Class.keepLatest(dictIsEvent)(Data_Functor.mapFlipped((dictIsEvent.Filterable1()).Functor1())(FRP_Behavior.sample_(dictIsEvent)(v.ids)(Control_Applicative.pure((dictIsEvent.Alternative0()).Applicative0())(Data_Unit.unit)))(function (me) {
                                                  var v1 = pursxToElement(dictPursxToElement)(Type_Proxy["Proxy"].value)(r);
                                                  return Control_Alt.alt(((dictIsEvent.Alternative0()).Plus1()).Alt0())(Control_Applicative.pure((dictIsEvent.Alternative0()).Applicative0())(v.makePursx({
                                                      id: me,
                                                      parent: parent,
                                                      cache: v1.cache,
                                                      html: Data_Symbol.reflectSymbol(dictIsSymbol)(html),
                                                      verb: Data_Symbol.reflectSymbol(dictIsSymbol1)(verb)
                                                  })))(v1.element(me)(v));
                                              }));
                                          };
                                      };
                                      return go;
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var makePursx = function (dictIsSymbol) {
      return function () {
          return function () {
              return function (dictPursxToElement) {
                  return function (dictIsEvent) {
                      return makePursx$prime(dictIsSymbol)({
                          reflectSymbol: function () {
                              return "~";
                          }
                      })()()(dictPursxToElement)(dictIsEvent)(Type_Proxy["Proxy"].value);
                  };
              };
          };
      };
  };
  var psx = function (dictIsSymbol) {
      return function () {
          return function (dictPursxToElement) {
              return function (dictIsEvent) {
                  return function (px) {
                      return makePursx(dictIsSymbol)()()(dictPursxToElement)(dictIsEvent)(px)({});
                  };
              };
          };
      };
  };
  exports["psx"] = psx;
  exports["pursxToElementNil"] = pursxToElementNil;
})(PS);
(function(exports) {
  var makeid = function (length) {
	  var result = "";
	  var characters =
		  "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
	  var charactersLength = characters.length;
	  for (var i = 0; i < length; i++) {
		  result += characters.charAt(Math.floor(Math.random() * charactersLength));
	  }
	  return result;
  };

  var connectXToY_ = function (x) {
	  return function (y) {
		  return function (state) {
			  return function () {
				  state.units[y].main.appendChild(state.units[x].main);
			  };
		  };
	  };
  };

  var disconnectXFromY_ = function (x) {
	  return function (y) {
		  return function (state) {
			  return function () {
				  state.units[y].main.removeChild(state.units[x].main);
			  };
		  };
	  };
  };
  var makeElement = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  listeners: {},
				  parent: a.parent,
				  main: document.createElement(a.tag),
			  };
			  if (a.parent === state.terminus) {
				  state.terminalPtrs.push(a.id);
			  }
			  connectXToY_(ptr)(a.parent)(state)();
		  };
	  };
  };
  exports.makeElement = makeElement;
  exports.makeText_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  main: document.createTextNode(""),
				  parent: a.parent,
			  };
			  connectXToY_(ptr)(a.parent)(state)();
		  };
	  };
  };
  exports.makeFFIDOMSnapshot = function () {
	  return {
		  units: {},
		  portals: {},
		  unqidfr: makeid(10),
		  terminalPtrs: [],
	  };
  };
  exports.setAttribute_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  var avv = a.value.value;
			  if (a.value.type === "cb") {
				  if (state.units[ptr].listeners[a.key]) {
					  state.units[ptr].main.removeEventListener(
						  a.key,
						  state.units[ptr].listeners[a.key]
					  );
				  }
				  var el = (e) => avv(e)();
				  state.units[ptr].main.addEventListener(a.key, el);
				  state.units[ptr].listeners[a.key] = el;
			  } else {
				  if (state.units[ptr].main.tagName === "INPUT" && a.key === "value") {
					  state.units[ptr].main.value = avv;
				  } else if (state.units[ptr].main.tagName === "INPUT" && a.key === "checked") {
					  state.units[ptr].main.checked = avv === "true" ;
				  } else {
					  state.units[ptr].main.setAttribute(a.key, avv);
				  }
			  }
		  };
	  };
  };
  exports.setText_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr].main.nodeValue = a.text; //.replace(/\n/g, "<br>");
		  };
	  };
  };

  exports.makeSubgraph = function (ptr) {
	  return function (parent) {
		  return function (sceneM) {
			  return function (state) {
				  return function () {
					  var children = {};
					  var pushers = {};
					  var unsu = {};
					  state.units[ptr] = {
						  parent: parent,
						  sceneM: sceneM,
						  pushers: pushers,
						  children: children,
						  unsu: unsu,
					  };
				  };
			  };
		  };
	  };
  };

  exports.removeSubgraph = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  var j = a.pos;
			  var children = state.units[ptr].children;
			  var unsu = state.units[ptr].unsu;
			  if (children[j] === undefined) {
				  return;
			  }
			  for (var k = 0; k < children[j].terminalPtrs.length; k++) {
				  disconnectXFromY_(children[j].terminalPtrs[k])(state.units[ptr].parent)(
					  children[j]
				  )();
			  }
			  // unsubscribe
			  unsu[j]();
			  // delete unused
			  delete children[j];
			  delete unsu[j];
		  };
	  };
  };

  var insertOrUpdateSubgraph = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  var env = a.env;
			  var j = a.pos;
			  var index = a.index;
			  var children = state.units[ptr].children;
			  var unsu = state.units[ptr].unsu;
			  var pushers = state.units[ptr].pushers;
			  var needsConnecting = false;
			  if (env !== null && unsu[j] === undefined) {
				  children[j] = {
					  units: {},
					  portals: state.portals,
					  terminus: state.units[ptr].parent,
					  unqidfr: makeid(10),
					  parent: ptr,
					  terminalPtrs: [],
				  };
				  children[j].units[state.units[ptr].parent] =
					  state.units[state.units[ptr].parent];
				  var sg = state.units[ptr].sceneM(index)();
				  unsu[j] = sg.actualized(
					  (
						  (jIs) => (instr) => () =>
							  instr(children[jIs])()
					  )(j)
				  )();
				  pushers[j] = sg.pusher;
				  needsConnecting = true;
			  }
			  pushers[j](env)();
			  if (needsConnecting) {
				  for (var k = 0; k < children[j].terminalPtrs.length; k++) {
					  connectXToY_(children[j].terminalPtrs[k])(state.units[ptr].parent)(
						  children[j]
					  )();
				  }
			  }
		  };
	  };
  };
  var makePursx_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  var html = a.html;
			  var verb = a.verb;
			  var cache = a.cache;
			  var parent = a.parent;
			  if (a.parent === state.terminus) {
				  state.terminalPtrs.push(a.id);
			  }
			  var entries = Object.entries(cache);
			  for (var i = 0; i < entries.length; i++) {
				  var key = entries[i][0];
				  if (entries[i][1] === true) {
					  // it is an attribute
					  html = html.replace(
						  verb + key + verb,
						  "data-deku-attr-internal=" + '"' + key + '"'
					  );
				  } else {
					  html = html.replace(
						  verb + key + verb,
						  '<span style="display:contents;" data-deku-elt-internal=' +
							  '"' +
							  key +
							  '"></span>'
					  );
				  }
			  }
			  var tmp = document.createElement("div");
			  tmp.innerHTML = html.trim();
			  state.units[ptr] = {
				  listeners: {},
				  parent: parent,
				  main: tmp.firstChild,
			  };
			  tmp.querySelectorAll("[data-deku-attr-internal]").forEach(function (e) {
				  var key = e.getAttribute("data-deku-attr-internal");
				  state.units[key] = {
					  listeners: {},
					  main: e,
				  };
			  });
			  tmp.querySelectorAll("[data-deku-elt-internal]").forEach(function (e) {
				  var key = e.getAttribute("data-deku-elt-internal");
				  state.units[key] = {
					  listeners: {},
					  main: e,
				  };
			  });
			  connectXToY_(ptr)(parent)(state)();
		  };
	  };
  };
  exports.makePursx_ = makePursx_;
  exports.insertOrUpdateSubgraph = insertOrUpdateSubgraph;
  exports.sendSubgraphToTop_ = function (a) {
	  return function (state) {
		  return function () {
			  var child = state.units[a.id].children[a.pos];
			  if (child === undefined) {
				  return;
			  }
			  var l = child.terminalPtrs.length;
			  for (var i = 0; i < child.terminalPtrs.length; i++) {
				  state.units[state.units[a.id].parent].main.prepend(
					  child.units[child.terminalPtrs[l - i - 1]].main
				  );
			  }
		  };
	  };
  };
  exports.makeRoot_ = function (a) {
	  return function (state) {
		  return function () {
			  var ptr = a.id;
			  state.units[ptr] = {
				  main: a.root,
			  };
		  };
	  };
  };
  exports.makePortal_ = function (a) {
	  return function (state) {
		  return function () {
			  var main = document.createElement("div");
			  state.portals[a.id] = {
				  main: main,
			  };
			  state.units[a.id] = {
				  main: main,
			  };
			  main.setAttribute("style", "display:contents;");
		  };
	  };
  };
  exports.makeGateway_ = function (a) {
	  return function (state) {
		  return function () {
			  var main = document.createElement("div");
			  state.units[a.id] = {
				  main: main,
				  portal: a.portal
			  };
			  main.setAttribute("style", "display:contents;");
			  connectXToY_(a.id)(a.parent)(state)();
		  };
	  };
  };
  exports.setPortal_ = function (a) {
	  return function(state) {
		  return function() {
			  if (a.on) {
				  state.units[a.id].main.prepend(state.portals[state.units[a.id].portal].main);
			  } else {
				  state.units[a.id].main.innerHTML = "";
			  }
		  }
	  }
  };
})(PS["Deku.Interpret"] = PS["Deku.Interpret"] || {});
(function(exports) {
  "use strict";

  exports.random = Math.random;
})(PS["Effect.Random"] = PS["Effect.Random"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Effect.Random"] = $PS["Effect.Random"] || {};
  var exports = $PS["Effect.Random"];
  var $foreign = $PS["Effect.Random"];
  exports["random"] = $foreign.random;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad = $PS["Control.Monad"];                  
  var monadEffect = {
      Applicative0: function () {
          return applicativeEffect;
      },
      Bind1: function () {
          return bindEffect;
      }
  };
  var bindEffect = {
      bind: $foreign.bindE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var applyEffect = {
      apply: Control_Monad.ap(monadEffect),
      Functor0: function () {
          return functorEffect;
      }
  };
  var applicativeEffect = {
      pure: $foreign.pureE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var functorEffect = {
      map: Control_Applicative.liftA1(applicativeEffect)
  };
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.modifyImpl = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];          
  var modify$prime = $foreign.modifyImpl;
  var modify = function (f) {
      return modify$prime(function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  exports["modify"] = modify;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Unsafe.Reference"] = $PS["Unsafe.Reference"] || {};
  var exports = $PS["Unsafe.Reference"];
  var $foreign = $PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["FRP.Event"] = $PS["FRP.Event"] || {};
  var exports = $PS["FRP.Event"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Filterable = $PS["Data.Filterable"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];                
  var Event = function (x) {
      return x;
  };
  var subscribe = function (v) {
      return function (k) {
          return v(k);
      };
  };
  var sampleOn = function (v) {
      return function (v1) {
          return function (k) {
              return function __do() {
                  var latest = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                  var c1 = v(function (a) {
                      return Effect_Ref.write(new Data_Maybe.Just(a))(latest);
                  })();
                  var c2 = v1(function (f) {
                      return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(latest))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($53) {
                          return k(f($53));
                      }));
                  })();
                  return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
              };
          };
      };
  };
  var makeEvent = Event;
  var keepLatest = function (v) {
      return function (k) {
          return function __do() {
              var cancelInner = Effect_Ref["new"](Data_Maybe.Nothing.value)();
              var cancelOuter = v(function (inner) {
                  return function __do() {
                      Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(cancelInner))(Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe))();
                      var c = subscribe(inner)(k)();
                      return Effect_Ref.write(new Data_Maybe.Just(c))(cancelInner)();
                  };
              })();
              return function __do() {
                  Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(cancelInner))(Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe))();
                  return cancelOuter();
              };
          };
      };
  };
  var functorEvent = {
      map: function (f) {
          return function (v) {
              return function (k) {
                  return v(function ($54) {
                      return k(f($54));
                  });
              };
          };
      }
  };
  var fold = function (f) {
      return function (v) {
          return function (b) {
              return function (k) {
                  return function __do() {
                      var result = Effect_Ref["new"](b)();
                      return v(function (a) {
                          return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.modify(f(a))(result))(k);
                      })();
                  };
              };
          };
      };
  };
  var filter = function (p) {
      return function (v) {
          return function (k) {
              return v(function (a) {
                  var v1 = p(a);
                  if (v1 instanceof Data_Maybe.Just) {
                      return k(v1.value0);
                  };
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                  };
                  throw new Error("Failed pattern match at FRP.Event (line 134, column 13 - line 136, column 27): " + [ v1.constructor.name ]);
              });
          };
      };
  };
  var filter$prime = function (f) {
      return filter(function (a) {
          var v = f(a);
          if (v) {
              return new Data_Maybe.Just(a);
          };
          if (!v) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at FRP.Event (line 64, column 13 - line 66, column 25): " + [ v.constructor.name ]);
      });
  };
  var create = function __do() {
      var subscribers = Effect_Ref["new"]([  ])();
      return {
          event: function (k) {
              return function __do() {
                  Effect_Ref.modify(function (v) {
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ k ]);
                  })(subscribers)();
                  return function __do() {
                      Effect_Ref.modify(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k))(subscribers)();
                      return Data_Unit.unit;
                  };
              };
          },
          push: function (a) {
              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(subscribers))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(function (k) {
                  return k(a);
              }));
          }
      };
  };
  var fix = function (f) {
      var v = Effect_Unsafe.unsafePerformEffect(create);
      var v1 = f(v.event);
      return function (k) {
          return function __do() {
              var c1 = subscribe(v1.input)(v.push)();
              var c2 = subscribe(v1.output)(k)();
              return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
          };
      };
  };
  var compactableEvent = {
      compact: filter(Control_Category.identity(Control_Category.categoryFn)),
      separate: function (xs) {
          return {
              left: filter(function (v) {
                  if (v instanceof Data_Either.Left) {
                      return new Data_Maybe.Just(v.value0);
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at FRP.Event (line 47, column 13 - line 49, column 33): " + [ v.constructor.name ]);
              })(xs),
              right: filter(function (v) {
                  if (v instanceof Data_Either.Right) {
                      return new Data_Maybe.Just(v.value0);
                  };
                  if (v instanceof Data_Either.Left) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at FRP.Event (line 54, column 13 - line 56, column 32): " + [ v.constructor.name ]);
              })(xs)
          };
      }
  };
  var filterableEvent = {
      filter: filter$prime,
      filterMap: filter,
      partition: function (p) {
          return function (xs) {
              return {
                  yes: filter$prime(p)(xs),
                  no: filter$prime((function () {
                      var $55 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                      return function ($56) {
                          return $55(p($56));
                      };
                  })())(xs)
              };
          };
      },
      partitionMap: function (f) {
          return function (xs) {
              return {
                  left: Data_Filterable.filterMap(filterableEvent)((function () {
                      var $57 = Data_Either.either(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value));
                      return function ($58) {
                          return $57(f($58));
                      };
                  })())(xs),
                  right: Data_Filterable.filterMap(filterableEvent)(function ($59) {
                      return Data_Either.hush(f($59));
                  })(xs)
              };
          };
      },
      Compactable0: function () {
          return compactableEvent;
      },
      Functor1: function () {
          return functorEvent;
      }
  };
  var applyEvent = {
      apply: function (v) {
          return function (v1) {
              return function (k) {
                  return function __do() {
                      var latestA = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                      var latestB = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                      var c1 = v(function (a) {
                          return function __do() {
                              Effect_Ref.write(new Data_Maybe.Just(a))(latestA)();
                              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(latestB))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($60) {
                                  return k(a($60));
                              }))();
                          };
                      })();
                      var c2 = v1(function (b) {
                          return function __do() {
                              Effect_Ref.write(new Data_Maybe.Just(b))(latestB)();
                              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(latestA))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($61) {
                                  return k((function (v2) {
                                      return v2(b);
                                  })($61));
                              }))();
                          };
                      })();
                      return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
                  };
              };
          };
      },
      Functor0: function () {
          return functorEvent;
      }
  };
  var applicativeEvent = {
      pure: function (a) {
          return function (k) {
              return function __do() {
                  k(a)();
                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
              };
          };
      },
      Apply0: function () {
          return applyEvent;
      }
  };
  var altEvent = {
      alt: function (v) {
          return function (v1) {
              return function (k) {
                  return function __do() {
                      var c1 = v(k)();
                      var c2 = v1(k)();
                      return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
                  };
              };
          };
      },
      Functor0: function () {
          return functorEvent;
      }
  };
  var plusEvent = {
      empty: function (v) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
      },
      Alt0: function () {
          return altEvent;
      }
  };
  var alternativeEvent = {
      Applicative0: function () {
          return applicativeEvent;
      },
      Plus1: function () {
          return plusEvent;
      }
  };
  var eventIsEvent = {
      fold: fold,
      keepLatest: keepLatest,
      sampleOn: sampleOn,
      fix: fix,
      Alternative0: function () {
          return alternativeEvent;
      },
      Filterable1: function () {
          return filterableEvent;
      }
  };
  exports["create"] = create;
  exports["makeEvent"] = makeEvent;
  exports["subscribe"] = subscribe;
  exports["functorEvent"] = functorEvent;
  exports["altEvent"] = altEvent;
  exports["plusEvent"] = plusEvent;
  exports["eventIsEvent"] = eventIsEvent;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Deku.Interpret"] = $PS["Deku.Interpret"] || {};
  var exports = $PS["Deku.Interpret"];
  var $foreign = $PS["Deku.Interpret"];
  var Control_Alt = $PS["Control.Alt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Show = $PS["Data.Show"];
  var Effect_Random = $PS["Effect.Random"];
  var FRP_Behavior = $PS["FRP.Behavior"];
  var FRP_Event = $PS["FRP.Event"];                
  var effectfulDOMInterpret = {
      ids: Data_Functor.map(FRP_Behavior.functorABehavior(FRP_Event.functorEvent))(Data_Show.show(Data_Show.showNumber))(FRP_Behavior.behavior(function (f) {
          return FRP_Event.makeEvent(function (k) {
              return function __do() {
                  var r = Effect_Random.random();
                  return FRP_Event.subscribe(f)(function (x) {
                      return k(x(r));
                  })();
              };
          });
      })),
      makeElement: $foreign.makeElement,
      makeRoot: $foreign.makeRoot_,
      makeText: $foreign.makeText_,
      makePursx: $foreign.makePursx_,
      makePortal: $foreign.makePortal_,
      makeGateway: $foreign.makeGateway_,
      setPortal: $foreign.setPortal_,
      makeSubgraph: function (v) {
          return function (dom) {
              return Data_Function.flip($foreign.makeSubgraph(v.id)(v.parent))(dom)(function (index) {
                  return function __do() {
                      var evtL = FRP_Event.create();
                      var evtR = FRP_Event.create();
                      var event = Control_Alt.alt(FRP_Event.altEvent)(Data_Functor.map(FRP_Event.functorEvent)(Data_Either.Left.create)(evtL.event))(Data_Functor.map(FRP_Event.functorEvent)(Data_Either.Right.create)(evtR.event));
                      var actualized = (function () {
                          var v1 = v.scenes(index)(evtR.push)(event);
                          return v1(v.parent)(effectfulDOMInterpret);
                      })();
                      return {
                          actualized: actualized,
                          pusher: evtL.push
                      };
                  };
              });
          };
      },
      setAttribute: $foreign.setAttribute_,
      setText: $foreign.setText_,
      sendSubgraphToTop: $foreign.sendSubgraphToTop_,
      insertOrUpdateSubgraph: function (v) {
          return $foreign.insertOrUpdateSubgraph({
              id: v.id,
              index: v.index,
              env: new Data_Either.Left(v.env),
              pos: v.pos
          });
      },
      removeSubgraph: $foreign.removeSubgraph
  };
  exports["effectfulDOMInterpret"] = effectfulDOMInterpret;
  exports["makeFFIDOMSnapshot"] = $foreign.makeFFIDOMSnapshot;
})(PS);
(function(exports) {
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function(exports) {
  "use strict";

  exports._body = function (doc) {
    return function () {
      return doc.body;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var $foreign = $PS["Web.HTML.HTMLDocument"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var body = (function () {
      var $10 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($11) {
          return $10($foreign["_body"]($11));
      };
  })();
  exports["body"] = body;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];      
  var toElement = Unsafe_Coerce.unsafeCoerce;
  exports["toElement"] = toElement;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  exports["document"] = $foreign.document;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Deku.Toplevel"] = $PS["Deku.Toplevel"] || {};
  var exports = $PS["Deku.Toplevel"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Deku_Control = $PS["Deku.Control"];
  var Deku_Interpret = $PS["Deku.Interpret"];
  var Effect = $PS["Effect"];
  var FRP_Event = $PS["FRP.Event"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var runInElement = function (elt) {
      return function (psh) {
          return function (mksn) {
              return function __do() {
                  var ffi = Deku_Interpret.makeFFIDOMSnapshot();
                  var v = FRP_Event.create();
                  var evt = Deku_Control.deku(FRP_Event.eventIsEvent)(elt)(mksn(v.push)(v.event))(Deku_Interpret.effectfulDOMInterpret);
                  Data_Functor["void"](Effect.functorEffect)(FRP_Event.subscribe(evt)(function (i) {
                      return i(ffi);
                  }))();
                  return v.push(psh)();
              };
          };
      };
  };
  var runInBody = function (push) {
      return function (go) {
          return function __do() {
              var b$prime = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.document))(Web_HTML_HTMLDocument.body)();
              return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Web_HTML_HTMLElement.toElement)(b$prime))(function (elt) {
                  return runInElement(elt)(push)(go);
              })();
          };
      };
  };
  exports["runInBody"] = runInBody;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Deku.Example.Toplevel"] = $PS["Deku.Example.Toplevel"] || {};
  var exports = $PS["Deku.Example.Toplevel"];
  var Data_Unit = $PS["Data.Unit"];
  var Deku_Pursx = $PS["Deku.Pursx"];
  var Deku_Toplevel = $PS["Deku.Toplevel"];
  var FRP_Event = $PS["FRP.Event"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var px = Type_Proxy["Proxy"].value;
  var main = Deku_Toplevel.runInBody(Data_Unit.unit)(function (v) {
      return function (v1) {
          return Deku_Pursx.psx({
              reflectSymbol: function () {
                  return "\x0a<div>\x0a  <h1>Hello!</h1>\x0a  <p>This is what a no-frills deku app looks like.</p>\x0a</div>\x0a";
              }
          })()(Deku_Pursx.pursxToElementNil(FRP_Event.plusEvent))(FRP_Event.eventIsEvent)(px);
      };
  });
  exports["px"] = px;
  exports["main"] = main;
})(PS);
PS["Deku.Example.Toplevel"].main();